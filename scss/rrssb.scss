// Ridiculously Responsive Social Sharing Buttons
// Team: @dbox, @joshuatuscan
// Site: http://www.kurtnoble.com/labs/rrssb
// Twitter: @therealkni

//        ___           ___
//       /__/|         /__/\        ___
//      |  |:|         \  \:\      /  /\
//      |  |:|          \  \:\    /  /:/
//    __|  |:|      _____\__\:\  /__/::\
//   /__/\_|:|____ /__/::::::::\ \__\/\:\__
//   \  \:\/:::::/ \  \:\~~\~~\/    \  \:\/\
//    \  \::/~~~~   \  \:\  ~~~      \__\::/
//     \  \:\        \  \:\          /__/:/
//      \  \:\        \  \:\         \__\/
//       \__\/         \__\/


// Note: You can and should add or remove buttons from config settings and
//       $social-list based on your specific needs.

// config settings
$rrssb-txt:         #fff    !default;
$rrssb-email:       #0a88ff !default;
$rrssb-facebook:    #306199 !default;
$rrssb-tumblr:      #32506d !default;
$rrssb-linkedin:    #007bb6 !default;
$rrssb-twitter:     #26c4f1 !default;
$rrssb-googleplus:  #e93f2e !default;
$rrssb-reddit:      #8bbbe3 !default;
$rrssb-youtube:     #df1c31 !default;
$rrssb-pinterest:   #b81621 !default;
$rrssb-pocket:      #ed4054 !default;
$rrssb-github:      #444    !default;
$rrssb-instagram:   #517fa4 !default;
$rrssb-hackernews:  #ff6600 !default;
$rrssb-delicious:   #0B79E5 !default;
$rrssb-vk:          #4d71a9 !default;

// Border radius for the buttons
$rrssb-border-radius: 0.2em !default;
// Default font size (will grow for wide screen)
$rrssb-font-size: 13.5px !default;
// Button height as a multiple of font size.
$rrssb-button-height: 2.7em !default;
// Icon height as a proportion of button height.
$rrssb-icon-ratio: 70% !default;

$rrssb-main-font: "Helvetica Neue", Helvetica, Arial, sans-serif !default;

// Variable list for all social button colors to be iterated over.
$social-list: (
  rrssb-email       $rrssb-email,
  rrssb-facebook    $rrssb-facebook,
  rrssb-tumblr      $rrssb-tumblr,
  rrssb-linkedin    $rrssb-linkedin,
  rrssb-twitter     $rrssb-twitter,
  rrssb-googleplus  $rrssb-googleplus,
  rrssb-youtube     $rrssb-youtube,
  rrssb-reddit      $rrssb-reddit,
  rrssb-pinterest   $rrssb-pinterest,
  rrssb-pocket      $rrssb-pocket,
  rrssb-github      $rrssb-github,
  rrssb-instagram   $rrssb-instagram,
  rrssb-delicious   $rrssb-delicious,
  rrssb-vk			    $rrssb-vk,
  rrssb-hackernews  $rrssb-hackernews
);


.rrssb-buttons {
  font-size:$rrssb-font-size;
  box-sizing: border-box;
  font-family: $rrssb-main-font;

  /* Height is based on font-size so everything scales in proportion. */
  height: $rrssb-button-height;
  
  /* Line height same as height so that text is centred vertically. */
  line-height: $rrssb-button-height;
  
  margin: 0;
  padding: 0;
  width: 100%;

  // clearfix buttons for large-format
  &:after {
    clear: both;
  }

  &:before,
  &:after {
    content: ' ';
    display: table;
  }

  li {
    box-sizing: border-box;
    float: left;
    height: 100%;
    list-style: none;
    margin: 0;
    padding: 0 2px;

    // This generates individual button classes for each item in social list on line 39.
    @each $s-name in $social-list {

      &.#{nth($s-name, 1)} {
        a {
          background-color: nth($s-name, 2);

          &:hover {
            background-color: darken(nth($s-name, 2), 10%);
          }
        }
      }

    } // end @each directive

    a {
      background-color: #ccc;
      border-radius: $rrssb-border-radius;
      box-sizing: border-box;
      display: block;
      /*@@overflow: hidden;*/
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      font-weight: bold;
      height: 100%;
      position: relative;
      text-align: center;
      text-decoration: none;
      text-transform: uppercase;
      transition: background-color .2s ease-in-out;
      width: 100%;

      .rrssb-icon {
        display: block;
        box-sizing: border-box;
        left: 0.5em;
        position: absolute;
        /* 15% margin top and bottom.
        /* But we need to specify a height rather than top+bottom else the icon disappears when there is no label. */
        top: (100% - $rrssb-icon-ratio)/2;
        height: $rrssb-icon-ratio;
        /* Need explicit width for IE (default is 300px), same as height. */
        width: ($rrssb-icon-ratio/100%) * $rrssb-button-height;

        svg {
          height: 100%;

          path {
            fill: $rrssb-txt;
          }
        }
      }

      .rrssb-text {
        color: $rrssb-txt;
        /* Left space to match the width of the icon. */
        /* Left and right space 1em to leave gaps either side of text. */
        padding: 0 1em 0 ($rrssb-icon-ratio/100%) * $rrssb-button-height + 1em;
      }

      &:active {
        box-shadow: inset 1px 3px 15px 0 rgba(22, 0, 0, .25);
      }
    }

    &.small {
      a {
        /* Need to bound the width for IE, else it goes to max available. */ 
        /* However must not fix the width else it prevents shrink. */
        /* Solution is max-width equal to button height. */
        max-width: $rrssb-button-height;
        
        .rrssb-icon {
          position: relative;
          left: 15%;
          padding-right: 30%;
          width: 100%;
          svg {
            /* Make the SVG shrink if the button is too narrow. */
            width: 100%;
          }
        }

        .rrssb-text {
          display: none;
        }
      }
    }
  }

  &.small-format {

    li {
      max-width: 25%; /*@@TEMP*/
      padding: 0 1px;
    }
  }

  &.tiny-format {
    height: 2em;

    li {

      a {
        background-color: transparent;

        .rrssb-icon {
          top: 0;
          height: 100%;
        }

        &:hover,
        &:active {
          background-color: transparent;
        }
      }

      // This generates individual button classes for each item in social list on line 39.
      @each $s-name in $social-list {

        &.#{nth($s-name, 1)} {
          a {
            .rrssb-icon {
              svg {
                path {
                  fill: nth($s-name, 2);
                }
              }

              &:hover {
	            svg {
                  path {
                    fill: darken(nth($s-name, 2), 20%);
                  }
                }
              }
            }
          }
        }
      }  // end @each directive
    }
  }
}
